{
  "name": "Kubernetes Dashboard",
  "description": "Get a high level overview of your Kubernetes instances",
  "pages": [
    {
      "name": "Kubernetes",
      "description": null,
      "widgets": [
        {
          "title": "Resources Used",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (average(cpuUsedCores) * uniqueCount(entityName)) AS `Cores`, ((average(memoryWorkingSetBytes) * uniqueCount(entityName)) / 1000000000) AS `Mem GB` FROM K8sNodeSample UNTIL 1 MINUTES AGO"
              }
            ]
          }
        },
        {
          "title": "# of K8s Objects",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(uniqueCount(k8s.nodeName), WHERE `label.eks.amazonaws.com/compute-type` IS NULL AND k8s.podName IS NULL) AS 'Nodes', filter(uniqueCount(k8s.nodeName), WHERE `label.eks.amazonaws.com/compute-type` IS NOT NULL AND k8s.podName IS NULL) as 'Serverless Nodes', uniqueCount(k8s.clusterName) as 'Clusters', filter(uniqueCount(k8s.namespaceName, k8s.clusterName), WHERE `metricName` = 'k8s.namespace.createdAt') as 'Namespaces', filter(uniqueCount(k8s.deploymentName, k8s.clusterName), WHERE `metricName` = 'k8s.deployment.createdAt') as 'Deployments', filter(uniqueCount(k8s.podName, k8s.nodeName, k8s.deploymentName, k8s.clusterName), WHERE metricName='k8s.pod.isScheduled' or metricName='k8s.pod.startTime') as 'Pods', uniqueCount(k8s.containerId) as 'Containers' FROM Metric UNTIL 1 minute ago"
              }
            ],
            "thresholds": []
          }
        },
        {
          "title": "",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Kubernetes \n\nThis dashboard provides an overview of your Kubernetes platform health. Apply filters to focus on a specific cluster or namespace.\n\n\n"
          }
        },
        {
          "title": "Namespaces per Cluster",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniqueCount(namespaceName) FROM K8sPodSample UNTIL 1 MINUTES AGO FACET clusterName LIMIT 100"
              }
            ]
          }
        },
        {
          "title": "Pods by Namespace",
          "layout": {
            "column": 5,
            "row": 4,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniqueCount(podName) AS `pod` FROM K8sPodSample UNTIL 1 MINUTES AGO FACET namespaceName LIMIT 100"
              }
            ]
          }
        },
        {
          "title": "Container Restarts",
          "layout": {
            "column": 9,
            "row": 4,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (max(restartCount) - min(restartCount)) AS `Restarts` FROM K8sContainerSample UNTIL 1 MINUTES AGO FACET tuple(clusterName, podName, containerName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Container CPU Usage - % Used vs Limit",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ((latest(cpuUsedCores) / latest(cpuLimitCores)) * 100) AS `% CPU` FROM K8sContainerSample UNTIL 1 MINUTES AGO FACET tuple(clusterName, podName, containerName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Container Memory Usage - % Used vs Limit",
          "layout": {
            "column": 5,
            "row": 7,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(memoryWorkingSetUtilization) AS `% Memory` FROM K8sContainerSample UNTIL 1 MINUTES AGO FACET tuple(clusterName, podName, containerName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Volume Usage - % Used",
          "layout": {
            "column": 9,
            "row": 7,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(fsUsedPercent) FROM K8sVolumeSample FACET tuple(podName, volumeName, pvcName) TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Container CPU Cores Used",
          "layout": {
            "column": 1,
            "row": 10,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average(cpuUsedCores) AS `CPU Cores Used` FROM K8sContainerSample SINCE 60 MINUTES AGO UNTIL 1 MINUTES AGO FACET tuple(clusterName, podName, containerName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Container MBytes of Memory Used",
          "layout": {
            "column": 5,
            "row": 10,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average((memoryWorkingSetBytes / 1000000)) AS `MB of Mem` FROM K8sContainerSample SINCE 60 MINUTES AGO UNTIL 1 MINUTES AGO FACET tuple(clusterName, podName, containerName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Missing Pods by Deployment",
          "layout": {
            "column": 9,
            "row": 10,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (latest(podsDesired) - latest(podsReady)) AS `Missing Pods` FROM K8sReplicasetSample SINCE 10 MINUTES AGO UNTIL 1 MINUTES AGO FACET tuple(clusterName, deploymentName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Latest pods not Running by Cluster/Namespace",
          "layout": {
            "column": 1,
            "row": 13,
            "width": 8,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(latest(status), WHERE (((`eventType`() IN ('K8sContainerSample', 'K8sPodSample')) AND (((NOT ((status = 'Running')) AND NOT ((status = 'Succeeded'))) AND NOT (status IS NULL)) AND NOT (podName IS NULL))) OR ((`eventType`() = 'K8sNamespaceSample') AND (((NOT ((status = 'Running')) AND NOT ((status = 'Succeeded'))) AND NOT (status IS NULL)) AND NOT (`k8s`.`podName` IS NULL))))) AS `Status`, max(timestamp) AS `Timestamp` FROM K8sContainerSample, K8sNamespaceSample, K8sPodSample FACET tuple(clusterName AS `Cluster Name`, namespaceName AS `Namespace`, (`conditional`(WHERE (`eventType`() IN ('K8sContainerSample', 'K8sPodSample')), podName) OR `conditional`(WHERE (`eventType`() = 'K8sNamespaceSample'), k8s.podName)) AS `Pod Name`) LIMIT 100 "
              }
            ]
          }
        },
        {
          "title": "Containers by Namespace",
          "layout": {
            "column": 9,
            "row": 13,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniqueCount(containerID) FROM K8sContainerSample FACET namespaceName TIMESERIES AUTO"
              }
            ],
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Node Resource Consumption",
          "layout": {
            "column": 1,
            "row": 16,
            "width": 8,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(cpuUsedCores) AS `Used Cores`, (latest(memoryWorkingSetBytes) / 1000000) AS `Used Memory MB`, uniqueCount(`k8s`.`podName`) AS `Pods` FROM K8sNodeSample SINCE 10 MINUTES AGO UNTIL 1 MINUTES AGO FACET nodeName LIMIT 100"
              }
            ]
          }
        },
        {
          "title": "Active Pods by Deployment",
          "layout": {
            "column": 9,
            "row": 16,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniqueCount(podName) FROM K8sPodSample WHERE (((status = 'Running') AND NOT (createdAt IS NULL)) AND NOT (deploymentName IS NULL)) SINCE 10 MINUTES AGO UNTIL 1 MINUTES AGO FACET tuple(clusterName, deploymentName) LIMIT 50 TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Volumes Usage > 90%",
          "layout": {
            "column": 1,
            "row": 19,
            "width": 8,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric select latest('k8s.volume.fsUsedPercent') facet k8s.podName, k8s.volumeName, k8s.pvcName where k8s.volume.fsUsedPercent > 90 SINCE 10 minutes ago UNTIL 1 minute ago"
              }
            ]
          }
        },
        {
          "title": "Pod Count by Node",
          "layout": {
            "column": 9,
            "row": 19,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniquecount(podName) FROM K8sPodSample WHERE ((status = 'Running') AND NOT (createdAt IS NULL)) SINCE 10 MINUTES AGO UNTIL 1 MINUTES AGO FACET nodeName"
              }
            ]
          }
        },
        {
          "title": "Pod Network Status",
          "layout": {
            "column": 1,
            "row": 22,
            "width": 12,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (latest(net.rxBytesPerSecond) / 1000) AS `Received KBps`, (latest(net.txBytesPerSecond) / 1000) AS `Transmitted KBps`, latest(net.errorsPerSecond) AS `Errors / sec` FROM K8sPodSample SINCE 10 MINUTES AGO UNTIL 1 MINUTES AGO FACET podName LIMIT 100"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Kubernetes Clusters and Nodes",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 1,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![Kubernetes](https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Kubernetes_logo_without_workmark.svg/1200px-Kubernetes_logo_without_workmark.svg.png)"
          }
        },
        {
          "title": "Clusters",
          "layout": {
            "column": 2,
            "row": 1,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniqueCount(nodeName) AS `Nodes`, filter(uniqueCount(podName), WHERE ((status = 'Running') AND NOT (createdAt IS NULL))) AS `Running Pods`, filter(uniqueCount(podName), WHERE ((status IN ('Pending')) AND NOT (createdAt IS NULL))) AS `Pending Pods`, uniqueCount(podName) AS `Total Pods` FROM K8sPodSample SINCE 30 MINUTES AGO FACET clusterName LIMIT 1000"
              }
            ]
          }
        },
        {
          "title": "CPU Usage",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ((average(cpuUsedCores) / average(allocatableCpuCores)) * 100) AS `CPU Util %`, 100 AS `100` FROM K8sNodeSample SINCE 30 MINUTES AGO TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Memory Usage",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ((average(memoryWorkingSetBytes) / average(allocatableMemoryBytes)) * 100) AS `Memory Util %`, 100 AS `100` FROM K8sNodeSample SINCE 30 MINUTES AGO TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "Disk Usage",
          "layout": {
            "column": 11,
            "row": 1,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ((average(fsUsedBytes) / average(fsCapacityBytes)) * 100) AS `Disk Util %`, 100 AS `100` FROM K8sNodeSample SINCE 30 MINUTES AGO TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT filter(uniqueCount(k8s.nodeName), WHERE `label.eks.amazonaws.com/compute-type` IS NULL AND k8s.podName IS NULL) as 'Nodes' since 30 minutes ago"
              }
            ],
            "thresholds": []
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT filter(uniqueCount(k8s.nodeName), WHERE `label.eks.amazonaws.com/compute-type` IS NOT NULL AND k8s.podName IS NULL) as 'Serverless Nodes'"
              }
            ],
            "thresholds": []
          }
        },
        {
          "title": "Nodes",
          "layout": {
            "column": 2,
            "row": 4,
            "width": 11,
            "height": 5
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT filter(uniqueCount(podName), WHERE (status = 'Running')) AS `Running Pods`, filter(uniqueCount(podName), WHERE (status = 'Pending')) AS `Pending Pods`, ((average(`k8s`.`node.cpuUsedCores`) / average(`k8s`.`node.allocatableCpuCores`)) * 100) AS `CPU %`, ((average(`k8s`.`node.memoryWorkingSetBytes`) / average(`k8s`.`node.allocatableMemoryBytes`)) * 100) AS `Mem %`, ((average(`k8s`.`node.fsUsedBytes`) / average(`k8s`.`node.fsCapacityBytes`)) * 100) AS `Disk Util %` FROM K8sPodSample WHERE (NOT (createdAt IS NULL) AND NOT (nodeName IS NULL)) SINCE 30 MINUTES AGO FACET nodeName LIMIT 2000"
              }
            ]
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric select uniqueCount(k8s.podName) as 'Running Pods' where k8s.status = 'Running' since 30 minutes ago"
              }
            ]
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 6,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric select filter(uniqueCount(k8s.podName), where k8s.status = 'Running') / filter(uniqueCount(k8s.podName), where k8s.status in ('Running','Pending')) * 100 as '% Pods Running' since 30 minutes ago"
              }
            ]
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT filter(uniqueCount(k8s.namespaceName, k8s.clusterName), WHERE `metricName` = 'k8s.namespace.createdAt') as 'Namespaces' since 30 minutes ago"
              }
            ],
            "thresholds": []
          }
        },
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 8,
            "width": 1,
            "height": 1
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric select filter(uniqueCount(k8s.deploymentName, k8s.clusterName), WHERE `metricName` = 'k8s.deployment.createdAt') as 'Deployments' since 30 minutes ago"
              }
            ],
            "thresholds": []
          }
        }
      ]
    },
    {
      "name": "Kubernetes Container Restarts",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 3,
            "height": 7
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# Container Restarts\n---\n![Container](https://github.com/kubernetes/community/blob/master/icons/png/resources/unlabeled/pod-128.png?raw=true)\n\nContainer restarts are **usually** not a good thing.  This dashboard will help identify the biggest offenders and where they are currently _trying_ to run."
          }
        },
        {
          "title": "Container Restarts",
          "layout": {
            "column": 4,
            "row": 1,
            "width": 9,
            "height": 7
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT max(restartCount) AS `Restart Count`, latest(reason) AS `Last Restart Reason` FROM K8sContainerSample WHERE (((restartCount > 0) AND NOT (reason IS NULL)) AND NOT (restartCount IS NULL)) SINCE 30 MINUTES AGO FACET tuple(containerName AS `Container Name`, podName AS `Pod Name`, clusterName AS `Cluster Name`) LIMIT 1000"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Kubernetes Pod Status",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 1,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![Pod](https://github.com/kubernetes/community/blob/master/icons/png/resources/labeled/pod-128.png?raw=true)"
          }
        },
        {
          "title": "Overall Pod Status",
          "layout": {
            "column": 2,
            "row": 1,
            "width": 11,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric select uniqueCount(k8s.podName) as 'Total Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Running') as 'Running Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Pending') as 'Pending Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Failed') as 'Failed Pods' since 30 minutes ago"
              }
            ]
          }
        },
        {
          "title": "Pod Status by Cluster",
          "layout": {
            "column": 1,
            "row": 3,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT uniqueCount(podName) AS `Pod Count` FROM K8sPodSample WHERE (NOT (status IS NULL) AND NOT (createdAt IS NULL)) SINCE 30 MINUTES AGO FACET tuple(clusterName AS `Cluster Name`, status AS `Status`) LIMIT 100"
              }
            ]
          }
        },
        {
          "title": "Latest Pending Pods",
          "layout": {
            "column": 6,
            "row": 3,
            "width": 7,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT podName AS `Pod Name`, status AS `Status`, clusterName AS `Cluster Name` FROM K8sPodSample WHERE ((status = 'Pending') AND NOT (createdAt IS NULL)) SINCE 30 MINUTES AGO LIMIT 1000"
              }
            ]
          }
        },
        {
          "title": "Pod OOMKills",
          "layout": {
            "column": 1,
            "row": 6,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(reason) AS `OOM Kills` FROM K8sContainerSample, K8sPodSample WHERE (reason = 'OOMKilled') SINCE 30 MINUTES AGO FACET tuple(clusterName, podName) LIMIT 1000"
              }
            ]
          }
        },
        {
          "title": "Latest Failed Pods",
          "layout": {
            "column": 6,
            "row": 6,
            "width": 7,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT podName AS `Pod Name`, status AS `Status`, clusterName AS `Cluster Name` FROM K8sPodSample WHERE ((status = 'Failed') AND NOT (createdAt IS NULL)) SINCE 30 MINUTES AGO LIMIT 1000"
              }
            ]
          }
        },
        {
          "title": "Pods Restarts",
          "layout": {
            "column": 1,
            "row": 9,
            "width": 12,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.bar"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT (max(restartCount) - min(restartCount)) FROM K8sContainerSample FACET tuple(podName, namespaceName)"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Kubernetes Utilization",
      "description": null,
      "widgets": [
        {
          "title": "CPU Used (Cores) by Node",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 12,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.area"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average(cpuUsedCores) FROM K8sNodeSample SINCE 60 MINUTES AGO FACET nodeName TIMESERIES AUTO"
              }
            ]
          }
        },
        {
          "title": "CPU % by Instance Type",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 8,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.heatmap"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT histogram(cpuPercent, 100, 25) FROM ProcessSample FACET instanceType"
              }
            ]
          }
        },
        {
          "title": "Memory Usage by pod, container",
          "layout": {
            "column": 9,
            "row": 4,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT ((average(memoryUsedBytes) / average(memoryLimitBytes)) * 100) AS `Memory Used %` FROM K8sContainerSample SINCE 60 MINUTES AGO FACET tuple(podName, containerName) LIMIT 1000 TIMESERIES AUTO"
              }
            ],
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "CPU % by Namespace",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 8,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.heatmap"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT histogram(cpuPercent, 10, 100) FROM ProcessSample FACET containerLabel_io.kubernetes.pod.namespace"
              }
            ]
          }
        },
        {
          "title": "MAX CPU Cores Requested by Container",
          "layout": {
            "column": 9,
            "row": 7,
            "width": 4,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT max(cpuRequestedCores) FROM K8sContainerSample SINCE 30 MINUTES AGO FACET containerName TIMESERIES AUTO"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Kubernetes Cluster Events",
      "description": null,
      "widgets": [
        {
          "title": "",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 1,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "![Logo](https://constructionlinks.ca/wp-content/uploads/2020/07/procore-logo-2020.jpg)"
          }
        },
        {
          "title": "Event Breakdown",
          "layout": {
            "column": 2,
            "row": 1,
            "width": 7,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.pie"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent select max(event.count) as 'Event Count' where category = 'kubernetes' and event.reason like '%Fail%' or event.reason like '%Kill%' or event.reason like '%Evict%' or event.reason like '%BackOff%' facet event.reason limit 1000 since 1 day ago"
              }
            ]
          }
        },
        {
          "title": "Murders",
          "layout": {
            "column": 9,
            "row": 1,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent SELECT count(event.count) as 'Murders' WHERE category = 'kubernetes' AND event.reason like '%Kill%'"
              }
            ]
          }
        },
        {
          "title": "Backoffs",
          "layout": {
            "column": 11,
            "row": 1,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent SELECT count(event.count) as 'Backoffs' WHERE category = 'kubernetes' AND event.reason like '%BackOff%'"
              }
            ]
          }
        },
        {
          "title": "Evictions",
          "layout": {
            "column": 9,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent select count(event.count) as 'Evictions' where category = 'kubernetes' AND event.reason like '%Evicted%' "
              }
            ]
          }
        },
        {
          "title": "Pod Failures",
          "layout": {
            "column": 11,
            "row": 3,
            "width": 2,
            "height": 2
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent select count(event.count) as 'Pod Fails' where category = 'kubernetes' AND event.reason like '%Fail%' "
              }
            ],
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 0
              },
              {
                "alertSeverity": "WARNING",
                "value": 0
              }
            ]
          }
        },
        {
          "title": "Cluster Events",
          "layout": {
            "column": 1,
            "row": 5,
            "width": 6,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent select max(event.count) as 'Event Count', latest(event.lastTimestamp), latest(entityName) where category = 'kubernetes' and event.reason like '%Fail%' or event.reason like '%Kill%' or event.reason like '%Evict%' or event.reason like '%BackOff%' facet event.reason, clusterName, event.involvedObject.name, event.involvedObject.kind  limit 1000 since 1 day ago where clusterName = 'pixie-auto-telemetry'"
              }
            ]
          }
        },
        {
          "title": "Timeseries of Kubernetes Cluster Events",
          "layout": {
            "column": 7,
            "row": 5,
            "width": 6,
            "height": 4
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM InfrastructureEvent select count(event.count) as 'Event Count' where category = 'kubernetes' and event.reason like '%Fail%' or event.reason like '%Kill%' or event.reason like '%Evict%' or event.reason like '%BackOff%' facet event.reason limit 1000 since 1 day ago TIMESERIES AUTO "
              }
            ],
            "yAxisLeft": {
              "zero": true
            }
          }
        }
      ]
    },
    {
      "name": "Optimization View",
      "description": null,
      "widgets": [
        {
          "title": "Current Resource Configuration",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(cpuRequestedCores) AS 'CPU request', \nlatest(cpuLimitCores) AS 'CPU limit', \nlatest(memoryRequestedBytes/1024/1024) AS 'Memory request (MB)', \nlatest(memoryLimitBytes/1024/1024) AS 'Memory limit (MB)' \nFROM K8sContainerSample SINCE 1 week ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Suggested Resource Configuration",
          "layout": {
            "column": 3,
            "row": 1,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT percentile(cpuUsedCores, 95) * (1 + 50/100) AS 'CPU request', \npercentile(cpuUsedCores, 95) * (1 + 100/100) AS 'CPU limit', \npercentile(memoryUsedBytes/1024/1024, 95) * (1 + 50/100) AS 'Memory request (MB)', \npercentile(memoryUsedBytes/1024/1024, 95) * (1 + 100/100) AS 'Memory limit (MB)' \nFROM K8sContainerSample SINCE 1 week ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        },
        {
          "title": "Potential Resource Savings per Replica",
          "layout": {
            "column": 5,
            "row": 1,
            "width": 2,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.billboard"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(cpuRequestedCores) - (percentile(cpuUsedCores, 95) * (1 + 50/100)) AS 'CPU request', \nlatest(cpuLimitCores) - (percentile(cpuUsedCores, 95) * (1 + 100/100)) AS 'CPU limit', \nlatest(memoryRequestedBytes/1024/1024) - (percentile(memoryUsedBytes/1024/1024, 95) * (1 + 50/100)) AS 'Memory request (MB)', \nlatest(memoryLimitBytes/1024/1024) - (percentile(memoryUsedBytes/1024/1024, 95) * (1 + 100/100)) AS 'Memory limit (MB)' \nFROM K8sContainerSample SINCE 1 week ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": -50000
              },
              {
                "alertSeverity": "WARNING",
                "value": -0.01
              }
            ]
          }
        },
        {
          "title": "",
          "layout": {
            "column": 7,
            "row": 1,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "# About This Page\n **Use the suggested recommendations to highly POTENTIAL optimizations, and test well before shipping to any production environments.  Always make sure you use filters to narrow down the set of data so that the recommendations are sensible.  For example filter by such attributes as cluster, deployment, and namesspace.**\n\n  ## How to Use These Recommendations\n\n  There are several specific variables in your K8s configurations that can be adjusted based on what you see in this report.\n  \n * [Requests & Limits](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits)\n  * [Memory](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory)\n  * [CPU](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu)\n   * [ResourceQuota](https://kubernetes.io/docs/concepts/policy/resource-quotas/)\n  * [LimitRange](https://kubernetes.io/docs/concepts/policy/limit-range/)\n  \n **The mechanics behind k8s resources are explained here:** https://blog.kubecost.com/blog/requests-and-limits/\n\n ## Acknowledgement\n\nAt Futurestack 2022 we showed how to use this data to potentially optimize both memory and CPU configures. Please utilize the dashboard filtering capabilities to filter to a specfic cluster, namespace, or container.\n\n## See the Futurestack presentation by [Frank Dornberger](https://newrelic.com/blog/authors/frank-dornberger) [here](https://www.youtube.com/watch?v=yiv1hnfekl4) and Frank's blog post [here](https://newrelic.com/blog/how-to-relic/movingimage-kubernetes-containers)\n## The demonstration environment from the workshop can be found in [Github](https://github.com/frank-dornberger/futurestack-2022-workshop)."
          }
        },
        {
          "title": "High CPU Throttle Count (indicator of over-utilization)",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT sum(containerCpuCfsThrottledPeriodsDelta) FROM K8sContainerSample SINCE 1 week ago FACET containerName TIMESERIES MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "High OOM Killed Count (indicator of over-utilization)",
          "layout": {
            "column": 4,
            "row": 4,
            "width": 3,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(*) FROM K8sContainerSample WHERE reason = 'OOMKilled' SINCE 1 week ago FACET containerName TIMESERIES MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "",
          "layout": {
            "column": 7,
            "row": 4,
            "width": 5,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.markdown"
          },
          "rawConfiguration": {
            "text": "## Over-Utilization Indicators\n\nIn some environments we may be over-utilizing key resources.  In those scenarios optimization is contra-indicated.\n\nCPU Thottling and OOM Kills are good indicators of potential overutilization of CPU and Memory resources.\n\n[Assigning CPU Resources to Containers and Pods](https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/)\n\n[Assigning Memory Resources to Containers and Pods](https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/)"
          }
        },
        {
          "title": "Suggestion Report",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 11,
            "height": 9
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT latest(cpuRequestedCores) AS 'current CPU request', \nlatest(cpuLimitCores) AS 'current CPU limit', latest(memoryRequestedBytes/1024/1024) AS 'current Memory request (MB)', latest(memoryLimitBytes/1024/1024) AS 'current Memory limit (MB)', percentile(cpuUsedCores, 95) * (1 + 50/100) AS 'suggested CPU request', \n\npercentile(cpuUsedCores, 95) * (1 + 100/100) AS 'suggested CPU limit', \naverage(containerCpuCfsThrottledPeriodsDelta) AS 'Avg. Throttles', \n\npercentile(memoryUsedBytes/1024/1024, 95) * (1 + 50/100) AS 'suggested Memory request (MB)', \n\npercentile(memoryUsedBytes/1024/1024, 95) * (1 + 100/100) AS 'suggested Memory limit (MB)'\nFROM K8sContainerSample SINCE 1 month ago \nFACET namespace, containerName AS 'Container' LIMIT MAX"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    }
  ],
  "variables": []
}
