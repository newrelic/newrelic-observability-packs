id: 03b4a3b9-3a59-4603-91dd-6b0ced1d62de
# Name of the quickstart (required)
slug: argocd-quickstart

# Displayed in the UI (required)
title: ArgoCD

# Long-form description of the quickstart (required)
description: |
  ## What is Argo CD?
  Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.

  ## Why Argo CD?
  Application definitions, configurations, and environments should be declarative and version controlled. Application deployment and lifecycle management should be automated, auditable, and easy to understand.

  This dashboard mirrors the official Argo CD Grafana dashboard ([Link](https://github.com/argoproj/argo-cd/blob/master/examples/dashboard.json)).

  ## Argo CD Getting started:
  - [Getting Started](https://argo-cd.readthedocs.io/en/stable/getting_started)
  - [Docs](https://argo-cd.readthedocs.io/en/stable/)
  - [Available Metrics](https://argo-cd.readthedocs.io/en/stable/operator-manual/metrics/)

  ## ArgoCD Dashboard Highlights:
  - Sync Activity
  - Health Status
  - Controller Stats
  - Repo Server Stats
  - Argo Server Stats

  ## Requirements:
  1. NewRelic Kubernetes Integration ([Link](https://docs.newrelic.com/docs/kubernetes-pixie/kubernetes-integration/installation/kubernetes-integration-install-configure/)) with the Prometheus OpenMetrics Integration ([Link](https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/get-started/send-prometheus-metric-data-new-relic/#OpenMetrics))
  2. Patch the ArgoCD pods with `prometheus.io/scrape=true` podAnnotations.  This will enable the New Relic Prometheus Integration to scrape ArgoCD metrics:

      `kubectl patch deployment argocd-server -n argocd -p '{"spec": {"template":{"metadata":{"annotations":{"prometheus.io/scrape":"true","prometheus.io/port": "8083","prometheus.io/path": "metrics"}}}} }'`

      `kubectl patch statefulset argocd-application-controller -n argocd -p '{"spec": {"template":{"metadata":{"annotations":{"prometheus.io/scrape":"true","prometheus.io/port": "8082","prometheus.io/path": "metrics"}}}} }'`

      `kubectl patch deployment argocd-repo-server -n argocd -p '{"spec": {"template":{"metadata":{"annotations":{"prometheus.io/scrape":"true","prometheus.io/port": "8084","prometheus.io/path": "metrics"}}}} }'`

# Displayed in search results and recommendations. Summarizes a quickstarts functionality.
summary: |
  Displays the performance and availability of the ArgoCD platform within Kubernetes.

# Support level: New Relic | Verified | Community (required)
level: New Relic

# Authors of the quickstart (required)
authors:
  - New Relic

# Keywords for filtering / searching criteria in the UI
keywords:
  - argocd
  - helm
  - kubernetes
  - k8s
  - cd
  - continuous deployment
  - argo
  - prometheus
  - remote_write
  - promql
  - grafana
  - newrelic partner
  - NR1_addData
  - NR1_sys

# Reference to install plans located under /install directory
# Allows us to construct reusable "install plans" and just use their ID in the quickstart config
installPlans:
  - kubernetes-install
  - setup-pomi
  - setup-prometheus

documentation:
  - name: ArgoCD Metrics Setup
    description: |
      Ship performance data from ArgoCD using Prometheus
    url: >-
      https://argo-cd.readthedocs.io/en/stable/operator-manual/metrics/
  - name: Prometheus OpenMetrics Integration Setup
    description: |
      Setup New Relic's Prometheus OpenMetrics Integration (POMI)
    url: >-
      https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/install-configure-openmetrics/install-update-or-uninstall-your-prometheus-openmetrics-integration
  - name: Prometheus Remote Write Integrations Setup
    description: |
      Use Prometheus remote_write integration
    url: https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/install-configure-remote-write/set-your-prometheus-remote-write-integration

# Content / Design
icon: logo.png

dashboards:
  - argocd-dashboard
