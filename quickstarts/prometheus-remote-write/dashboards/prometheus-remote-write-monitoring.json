{
  "name": "Prometheus Remote Write Monitoring",
  "description": "Monitoring for Prometheus Remote Write. Displays Prometheus server statistics, resulting metric cardinality and any errors during ingest.",
  "pages": [
    {
      "name": "Prometheus Remote Write Monitoring",
      "description": null,
      "widgets": [
        {
          "visualization": {
            "id": "viz.markdown"
          },
          "layout": {
            "column": 1,
            "row": 1,
            "height": 6,
            "width": 3
          },
          "title": "",
          "rawConfiguration": {
            "text": "Overview\n---\nThis dashboard provides insight into the metrics collected into this account via the [Prometheus Remote Write Integration](https://docs.newrelic.com/docs/prometheus-remote-write-integration). You may filter this dashboard's results to single Remote Write source by clicking one of the bars in the top left '_Remote Write Datapoints Stored/Sec by Source_' chart or by entering filter criteria into the filter bar above.\n\nUsage\n---\nThe top 2 rows of this dashboard contain charts that provide information about the volume of metrics sent to New Relic. These charts are useful in understanding New Relic metric usage attributable to Remote Write\n\nThe remaining rows show `prometheus_remote_storage*` metrics to help in monitoring remote write from Prometheus itself and can be used to identify issues sending metrics to New Relic from Prometheues. _Note: in many cases Prometheus will scrape its own remote storage metrics, but a Prometheus server could also be scraping a different server, too_ \n\nTroubleshooting\n---\nIf you don't see data, you may not be [configuring Prometheus to monitor itself](https://prometheus.io/docs/prometheus/latest/getting_started/#configuring-prometheus-to-monitor-itself). You should also check the '_New Relic Usage and Errors_' tab to look for any errors reported there. \n\nOn the sending side, it's important to look for logged errors related to requests and rate limits. In your Prometheus logs, you may see errors like:\n`server returned HTTP status 429 Too Many Requests: {}`. Failures shown '_Prometheus Datapoint Send Failures_' chart are also an indication that you should check your server logs. \n\nUsing remote write increases the memory footprint of Prometheus Server. You can use the the '_Prometheus Server Monitoring_' tab to monitor the general health of your prometheus server(s). \n\nIn Prometheus, data from the write-ahead log (WAL) is sharded across in-memory queues before being sent to remote endpoints. Resource utilization is governed by the number of shards, number of samples per shard, and number of samples sent per request to an endpoint. For more information, consult the documentation on [remote write tuning](https://prometheus.io/docs/practices/remote_write/) .\n\n\n"
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 4,
            "row": 1,
            "height": 3,
            "width": 3
          },
          "title": "Remote Write Datapoints Stored/Sec by Source",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT rate(datapointcount(), 1 second) AS 'Datapoints Received / Second' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source LIMIT MAX RAW "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.area"
          },
          "layout": {
            "column": 7,
            "row": 1,
            "height": 3,
            "width": 6
          },
          "title": "Remote Write Datapoints Stored/Sec by Source",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "From Metric SELECT rate(datapointcount(), 1 second) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instrumentation.source RAW LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.billboard"
          },
          "layout": {
            "column": 4,
            "row": 4,
            "height": 3,
            "width": 3
          },
          "title": "Unique Metric Names by Source",
          "rawConfiguration": {
            "dataFormatters": [],
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT uniqueCount(metricName) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source LIMIT MAX"
              }
            ],
            "thresholds": []
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.billboard"
          },
          "layout": {
            "column": 7,
            "row": 4,
            "height": 3,
            "width": 3
          },
          "title": "Unique Timeseries by Source (metric cardinality)",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT cardinality() AS 'Time Series' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source LIMIT MAX"
              }
            ],
            "thresholds": [
              {
                "alertSeverity": "CRITICAL",
                "value": 200000
              },
              {
                "alertSeverity": "WARNING",
                "value": 100000
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 10,
            "row": 4,
            "height": 3,
            "width": 3
          },
          "title": "Unique Timeseries by Metric",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT cardinality(metricName) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET metricName LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 1,
            "row": 7,
            "height": 3,
            "width": 3
          },
          "title": "Prometheus Send Errors by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT SUM(prometheus_remote_storage_dropped_samples_total) + SUM(prometheus_remote_storage_failed_samples_total) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source,instance LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 4,
            "row": 7,
            "height": 3,
            "width": 4
          },
          "title": "Prometheus Datapoint Send Failures/Sec by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT rate(SUM(prometheus_remote_storage_failed_samples_total), 1 second) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source,instance TIMESERIES AUTO LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 8,
            "row": 7,
            "height": 3,
            "width": 5
          },
          "title": "Prometheus Datapoints Sent/Sec by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT rate(sum(prometheus_remote_storage_samples_in_total), 1 second) FACET instance,`instrumentation.source` WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 1,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Prometheus Retries by Source+Instance ",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT sum(prometheus_remote_storage_enqueue_retries_total) AS 'Enqueue Retries', sum(prometheus_remote_storage_retried_samples_total)AS 'Retried Samples' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source,instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 4,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Average Batch Send Duration by Source+Instance (seconds)",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT sum(prometheus_remote_storage_sent_batch_duration_seconds_sum) / sum(prometheus_remote_storage_sent_batch_duration_seconds_count) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source,instance TIMESERIES AUTO"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 7,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Prometheus Pending Datapoints by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT max(prometheus_remote_storage_pending_samples) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instrumentation.source,instance  LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 10,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Prometheus Bytes Sent/Sec by Source+Instance",
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT \nIFTHEN(sum(prometheus_remote_storage_sent_bytes_total) > 0, rate(sum(prometheus_remote_storage_sent_bytes_total), 1 second)) \nOR IFTHEN(sum(prometheus_remote_storage_bytes_total) > 0, rate(sum(prometheus_remote_storage_bytes_total), 1 second)) \nOR rate(sum(prometheus_remote_storage_samples_bytes_total), 1 second)  \nwhere instrumentation.name = 'remote-write' TIMESERIES AUTO FACET instrumentation.source,instance LIMIT MAX"
              }
            ],
            "yAxisLeft": {
              "zero": true
            }
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.table"
          },
          "layout": {
            "column": 1,
            "row": 13,
            "height": 3,
            "width": 12
          },
          "title": "Prometheus Sharding Summary by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT average(prometheus_remote_storage_shard_capacity), average(prometheus_remote_storage_shards), average(prometheus_remote_storage_shards_desired), latest(prometheus_remote_storage_shards_min), latest(prometheus_remote_storage_shards_max) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source,instance LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        }
      ]
    },
    {
      "name": "Cardinality",
      "description": null,
      "widgets": [
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 1,
            "row": 1,
            "height": 3,
            "width": 4
          },
          "title": "Metric Cardinality Filter Helper",
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT cardinality(metricName) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET metricName LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.table"
          },
          "layout": {
            "column": 5,
            "row": 1,
            "height": 3,
            "width": 8
          },
          "title": "Unique Metric Dimensions",
          "rawConfiguration": {
            "dataFormatters": [],
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT uniques(dimensions()) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.json"
          },
          "layout": {
            "column": 1,
            "row": 4,
            "height": 3,
            "width": 4
          },
          "title": "Attribute Cardinality",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT attributeCardinality() WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' LIMIT MAX"
              }
            ]
          },
          "linkedEntityGuids": null
        }
      ]
    },
    {
      "name": "Prometheus Server Monitoring",
      "description": null,
      "widgets": [
        {
          "visualization": {
            "id": "viz.markdown"
          },
          "layout": {
            "column": 1,
            "row": 1,
            "height": 6,
            "width": 3
          },
          "title": "",
          "rawConfiguration": {
            "text": "Usage\n---\nThis dashboard provides general information on the health of Prometheus servers that are monitored via the [Prometheus Remote Write Integration](https://docs.newrelic.com/docs/prometheus-remote-write-integration).\n\nIf you have integrated multiple servers, you may filter this dashboard by clicking on one of the bars int the left bar chart to filter down to a particular Prometheus instance. \n\nIf you don't see data, you may not be [configuring Prometheus to monitor itself](https://prometheus.io/docs/prometheus/latest/getting_started/#configuring-prometheus-to-monitor-itself). Or you might be running into resource limits or errors (see the tab 3). "
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 4,
            "row": 1,
            "height": 3,
            "width": 2
          },
          "title": "Prometheus Samples Collected/Sec by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM MetricRaw SELECT rate(sum(prometheus_tsdb_head_samples_appended_total), 1 second) AS 'Samples Collected per Second' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instrumentation.source,instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.area"
          },
          "layout": {
            "column": 6,
            "row": 1,
            "height": 3,
            "width": 7
          },
          "title": "Prometheus Samples Collected/Sec by Source+Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT rate(sum(prometheus_tsdb_head_samples_appended_total), 1 second) WHERE job='prometheus' and instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instrumentation.source,instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 4,
            "row": 4,
            "height": 3,
            "width": 3
          },
          "title": "Max Scrape Duration by Job+Instance (seconds)",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT max(scrape_duration_seconds) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET job,instance  "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 7,
            "row": 4,
            "height": 3,
            "width": 3
          },
          "title": "Memory Profile by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(process_resident_memory_bytes), latest(process_virtual_memory_bytes) WHERE job = 'prometheus' AND instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instance "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 10,
            "row": 4,
            "height": 3,
            "width": 3
          },
          "title": "Remote Write Samples Sent/Sec by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT rate(sum(prometheus_remote_storage_samples_in_total), 1 second) AS 'Samples Appended / Sec' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instance "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 1,
            "row": 7,
            "height": 3,
            "width": 3
          },
          "title": "Active Appenders by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(prometheus_tsdb_head_active_appenders) AS 'Active Appenders', latest(process_open_fds) AS 'Open FDS' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instance "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 4,
            "row": 7,
            "height": 3,
            "width": 3
          },
          "title": "Blocks Loaded by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(prometheus_tsdb_blocks_loaded) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instance "
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 7,
            "row": 7,
            "height": 3,
            "width": 3
          },
          "title": "Head Chunks by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(prometheus_tsdb_head_chunks) WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.bar"
          },
          "layout": {
            "column": 10,
            "row": 7,
            "height": 3,
            "width": 3
          },
          "title": "Write Ahead Log Corruption by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT sum(prometheus_tsdb_wal_corruptions_total) AS 'WAL Corruptions' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' SINCE 1 day ago FACET instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.area"
          },
          "layout": {
            "column": 1,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Reload Activity by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT sum(prometheus_tsdb_reloads_total) AS 'Reloads', sum(prometheus_tsdb_reloads_failures_total) AS 'Reload Failures' TIMESERIES AUTO WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' FACET instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 4,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Compaction Activity by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT sum(prometheus_tsdb_compactions_triggered_total) AS 'Compactions Triggered', sum(prometheus_tsdb_compactions_skipped_total) AS 'Compactions Skipped', sum(prometheus_tsdb_compactions_failed_total) AS 'Compactions Failed' where instrumentation.provider = 'prometheus' TIMESERIES AUTO SINCE 1 day ago FACET instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 7,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Head Block GC Activity by Instance",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT rate(sum(prometheus_tsdb_head_gc_duration_seconds_count), 1 second) where instrumentation.provider = 'prometheus' and instrumentation.name = 'remote-write' TIMESERIES AUTO FACET instance"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.line"
          },
          "layout": {
            "column": 10,
            "row": 10,
            "height": 3,
            "width": 3
          },
          "title": "Query Durations by Instance+Slice",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT latest(prometheus_engine_query_duration_seconds) WHERE job = 'prometheus' AND quantile = '0.99' WHERE instrumentation.name = 'remote-write' and instrumentation.provider = 'prometheus' TIMESERIES AUTO FACET instance,slice"
              }
            ]
          },
          "linkedEntityGuids": null
        }
      ]
    },
    {
      "name": "New Relic Usage and Errors",
      "description": null,
      "widgets": [
        {
          "visualization": {
            "id": "viz.markdown"
          },
          "layout": {
            "column": 1,
            "row": 1,
            "height": 3,
            "width": 2
          },
          "title": "",
          "rawConfiguration": {
            "text": "Usage\n--------\nThis page breaks down metric utilization in New Relic between Remote Write and other sources and can help troubleshooting when limits or errors are encountered.\n\nYou may also want to consult:\n* [Troubleshoot NRIntegrationError events](https://docs.newrelic.com/docs/data-ingest-apis/get-data-new-relic/metric-api/troubleshoot-nrintegrationerror-events)\n* [New Relic data usage limits and policies](https://docs.newrelic.com/docs/licenses/license-information/general-usage-licenses/new-relic-data-usage-limits-policies#).\n* [Understand and query high cardinality metrics](https://docs.newrelic.com/docs/data-apis/ingest-apis/metric-api/NRQL-high-cardinality-metrics/)\n\n"
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.table"
          },
          "layout": {
            "column": 3,
            "row": 1,
            "height": 3,
            "width": 10
          },
          "title": "New Relic Integration Warnings",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM NrIntegrationError SELECT count(*),latest(timestamp) AS 'Error Count' FACET category,newRelicFeature,rateLimitType,level,message since 24 hours ago"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.area"
          },
          "layout": {
            "column": 1,
            "row": 4,
            "height": 3,
            "width": 6
          },
          "title": "Metric Cardinality over Time",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM Metric SELECT filter(cardinality(), WHERE instrumentation.name = 'remote-write') AS 'Remote Write Metrics', filter(cardinality(), WHERE instrumentation.name != 'remote-write') AS 'Non Remote Write Metrics' TIMESERIES AUTO"
              }
            ]
          },
          "linkedEntityGuids": null
        },
        {
          "visualization": {
            "id": "viz.area"
          },
          "layout": {
            "column": 7,
            "row": 4,
            "height": 3,
            "width": 6
          },
          "title": "Metrics Datapoints Stored/Min over Time",
          "rawConfiguration": {
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "FROM MetricRaw SELECT filter(rate(datapointcount(), 1 minute), WHERE instrumentation.name= 'remote-write') AS 'Remote Write Metrics', filter(rate(count(*), 1 minute), WHERE instrumentation.name != 'remote-write' OR instrumentation.name IS NULL) AS 'Non Remote Write Metrics' TIMESERIES AUTO"
              }
            ]
          },
          "linkedEntityGuids": null
        }
      ]
    }
  ]
}
